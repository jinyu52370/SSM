<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.jjj"/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/pages/"
          p:suffix=".jsp"
    />

    <!--<bean id="dataFormat" class="java.text.SimpleDateFormat">-->
        <!--<constructor-arg value="yyyy-MM-dd"/>-->
    <!--</bean>-->

    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <!--默认DispatcherServlet拦截所有资源(除过jsp)，js文件就404了，要js文件的请求应当交给tomcat处理
        告诉SpringMVC，自己映射的请求就自己处理，不能处理的请求交给tomcat
        静态资源能访问，动态映射的请求不行
    -->
    <mvc:default-servlet-handler/>
    <!--SpringMVC可以保证动态请求和静态请求都能访问
        使用自己配置的类型转换组件
    -->
    <mvc:annotation-driven conversion-service="conversionService"/>

    <!--让SpringMVC不要使用默认的ConversionService，用自定义的ConversionService-->
    <!--<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">-->
        <!--<property name="converters">-->
            <!--<bean class="com.jjj.component.MyStringToUser"/>-->
        <!--</property>-->
    <!--</bean>-->

    <!--使用FormattingConversionServiceFactoryBean，既具有自定义的类型转换，也可以格式化-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <bean class="com.jjj.component.MyStringToUser"/>
        </property>
    </bean>
</beans>